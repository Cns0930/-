plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.seassoon'
version = '2.0.0-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	maven {
		url "https://maven.aliyun.com/nexus/content/groups/public"
	}
	mavenLocal()
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.squareup.okhttp3:okhttp:4.9.2'
	implementation 'com.google.guava:guava:31.0.1-jre'
	implementation 'com.google.code.gson:gson:2.8.8'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'org.apache.commons:commons-text:1.9'
	implementation 'cn.hutool:hutool-all:5.7.14'
	implementation 'io.minio:minio:8.3.1'

	compileOnly 'org.projectlombok:lombok:1.18.22'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	annotationProcessor 'org.projectlombok:lombok:1.18.22'
}

test {
	useJUnitPlatform()
}

tasks.withType(Javadoc) {
	options.addStringOption("Xdoclint:none", "-quiet")
	options.addStringOption("encoding", "UTF-8")
	options.addStringOption("charSet", "UTF-8")
}

// jacoco生成测试报告
check.dependsOn(jacocoTestReport)
jacocoTestReport {
	reports {
		xml.enabled(false)
		html.enabled(true)
	}
}